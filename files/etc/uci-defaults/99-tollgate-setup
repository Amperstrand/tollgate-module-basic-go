#!/bin/sh
# TollGate first-boot configuration

# 1. Firewall configuration
if ! uci -q get firewall.tollgate_rules; then
    uci add firewall include
    uci set firewall.@include[-1].path='/etc/config/firewall-tollgate'
    uci rename firewall.@include[-1]='tollgate_rules'
    uci commit firewall
fi

# 2. Configure uhttpd listener ports
current_listen=$(uci -q get uhttpd.main.listen_http)
if [ "$current_listen" != "0.0.0.0:8080" ]; then
    uci set uhttpd.main.listen_http='0.0.0.0:8080'
    uci add_list uhttpd.main.listen_http='[::]:8080'
    uci commit uhttpd
fi

# 3. Configure DNS settings
current_dns=$(uci -q get network.lan.dns)
if [ "$current_dns" = "127.0.0.1" ] || [ "$current_dns" = "::1" ] || [ -z "$current_dns" ]; then
    # Only change DNS if it's set to localhost or not set
    uci -q delete network.lan.dns
    uci add_list network.lan.dns='1.1.1.1'  # CloudFlare primary DNS
    uci add_list network.lan.dns='1.0.0.1'  # CloudFlare secondary DNS
fi
uci set network.lan.domain='lan'

# Configure dnsmasq
uci set dhcp.@dnsmasq[0].domainneeded='1'
uci set dhcp.@dnsmasq[0].localise_queries='1' 
uci set dhcp.@dnsmasq[0].rebind_protection='1'
uci set dhcp.@dnsmasq[0].local='/lan/'
uci set dhcp.@dnsmasq[0].domain='lan'
uci set dhcp.@dnsmasq[0].expandhosts='1'
uci commit network
uci commit dhcp

# 4. Configure WiFi networks
# Generate a random 4-character suffix for the SSID
RANDOM_SUFFIX=$(head /dev/urandom | tr -dc 'A-Z0-9' | head -c 4)

# Check if default radio0 exists before configuring
if uci -q get wireless.default_radio0 >/dev/null; then
    # Configure 2.4GHz WiFi with random suffix
    uci set wireless.default_radio0.name='tollgate_2g_open'
    uci set wireless.default_radio0.ssid="TollGate-${RANDOM_SUFFIX} - Setup"
    uci set wireless.default_radio0.encryption='none'
fi

# Check if default radio1 exists before configuring
if uci -q get wireless.default_radio1 >/dev/null; then
    # Configure 5GHz WiFi with the same random suffix
    uci set wireless.default_radio1.name='tollgate_5g_open'
    uci set wireless.default_radio1.ssid="TollGate-${RANDOM_SUFFIX} - Setup"
    uci set wireless.default_radio1.encryption='none'
fi

# Enable wireless interfaces if they exist
if uci -q get wireless.radio0 >/dev/null; then
    uci set wireless.radio0.disabled='0'
fi
if uci -q get wireless.radio1 >/dev/null; then
    uci set wireless.radio1.disabled='0'
fi

# Commit wireless changes
uci commit wireless

# 5. Configure NoDogSplash
if ! uci -q get nodogsplash.@nodogsplash[0]; then
    # Create nodogsplash section if it doesn't exist
    uci add nodogsplash nodogsplash
fi

# Set basic NoDogSplash configuration
uci set nodogsplash.@nodogsplash[0].enabled='1'
uci set nodogsplash.@nodogsplash[0].gatewayname='TollGate Nodogsplash'
uci set nodogsplash.@nodogsplash[0].gatewayinterface='br-lan'

# Ensure TollGate protocol port is allowed
uci add_list nodogsplash.@nodogsplash[0].users_to_router='allow tcp port 2121'
uci add_list nodogsplash.@nodogsplash[0].users_to_router='allow tcp port 8080'
uci commit nodogsplash

# 6. Add TollGate port to firewall (if not in firewall-tollgate)
if ! grep -q "port 2121" /etc/config/firewall-tollgate 2>/dev/null; then
    # Add rule directly to main firewall if not in tollgate-specific file
    uci add firewall rule
    uci set firewall.@rule[-1].name='Allow-TollGate-Protocol'
    uci set firewall.@rule[-1].src='wan'
    uci set firewall.@rule[-1].proto='tcp'
    uci set firewall.@rule[-1].dest_port='2121'
    uci set firewall.@rule[-1].target='ACCEPT'
    uci commit firewall
fi

# 7. Add first-login-setup hook to profile if it doesn't exist
if ! grep -q "first-login-setup" /etc/profile; then
    # Append the first-login-setup code to the end of profile
    cat >> /etc/profile << 'EOF'

# TollGate first login setup
if [ ! -f /etc/first_login_done ] && [ -t 0 ] && [ -t 1 ]; then
    /usr/local/bin/first-login-setup
fi
EOF
    echo "Added first-login-setup hook to /etc/profile"
fi

# Ensure script exits successfully
exit 0