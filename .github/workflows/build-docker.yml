name: Build and Publish

on:
  push:
    branches: [ "build-with-docker" ]

## Add global env vars for the whole workflow
#env:
#  DEFAULT_MODULE_NAME: "basic"


#      {
#        name: "glmt3000",
#        goarch: "arm64",
#        model: "gl-mt3000",
#        platform: "mediatek",
#        subtarget: "filogic",
#        profile: "glinet_gl-mt3000",
#        arch: "aarch64_cortex-a53"
#      },

jobs:
  build-package:
    runs-on: ubuntu-latest
    container:
      image: openwrt/sdk:mediatek-filogic-24.10.0
      options: --user root # https://github.com/actions/checkout/issues/1575#issuecomment-2536435128
#      env:
#        TERM: xterm-256color
#        DEBIAN_FRONTEND: noninteractive

    steps:
      - uses: actions/checkout@v3
        with:
          path: tollgate-module-basic-go/

      - name: Move sources to sdk folder
        run: |
          mv tollgate-module-basic-go /builder/package/tollgate-module-basic-go

      - name: Install Golang
        run: |
          # Add golang-backports repository
          echo "deb https://deb.debian.org/debian bookworm-backports main" > /etc/apt/sources.list.d/backports.list
          apt-get update
          
          # Install Go from backports
          apt-get install -y -t bookworm-backports golang-go

      - name: Configure SDK
        run: |
          cd /builder

          # Generate default configuration
          make defconfig

          # Update configuration for our needs
          echo "CONFIG_PACKAGE_tollgate-module-basic-go=y" >> .config
          
      - name: Compile Package
        run: |
          cd /builder
          make -j1 package/tollgate-module-basic-go/compile ${{ env.debug == 'true' && 'V=sc' || '' }}- name: Compile Package

      - name: List output package(s)
        run: |
          cd /builder
          ls -R /builder/build_dir

#
#      - name: Debug output
#        run: |
#          echo "Attempting to list built package:"
#          ls -R /tmp/openwrt-sdk/openwrt-sdk-*/bin/packages
#
#      - name: Upload Package to Blossom
#        id: upload_package
#        uses: c03rad0r/cli-blossom-uploader-go@main
#        with:
#          host: "https://blossom.swissdash.site"
#          filePath: ${{ env.PACKAGE_FULLPATH }}
#          nostrPrivateKey: ${{ secrets.NSECBECH }}
#          desiredExtension: ipk
#
#      # Add a step to save the outputs to environment variables
#      - name: Save Upload Results to Environment
#        run: |
#          # Debug first
#          echo "Upload outputs:"
#          echo "  URL: ${{ steps.upload_package.outputs.url }}"
#          echo "  Hash: ${{ steps.upload_package.outputs.hash }}"
#          echo "  Success: ${{ steps.upload_package.outputs.success }}"
#
#          # Save to environment variables
#          echo "PACKAGE_URL=${{ steps.upload_package.outputs.url }}" >> $GITHUB_ENV
#          echo "PACKAGE_HASH=${{ steps.upload_package.outputs.hash }}" >> $GITHUB_ENV
#
#          # Get file size directly if needed
#          if [ -f "${{ env.PACKAGE_FULLPATH }}" ]; then
#            FILE_SIZE=$(stat -c%s "${{ env.PACKAGE_FULLPATH }}")
#            echo "PACKAGE_SIZE=$FILE_SIZE" >> $GITHUB_ENV
#            echo "File size: $FILE_SIZE bytes"
#          else
#            echo "WARNING: Package file not found at ${{ env.PACKAGE_FULLPATH }}"
#          fi
#
#      - name: Publish Package NIP-94 Metadata
#        id: publish_package
#        if: steps.upload_package.outputs.success == 'true'
#        uses: OpenTollGate/nostr-publish-file-metadata-action/python@main
#        with:
#          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/
#          url: ${{ env.PACKAGE_URL }}
#          mimeType: application/x-opkg
#          fileHash: ${{ env.PACKAGE_HASH }}
#          originalHash: ${{ env.PACKAGE_HASH }}
#          filename: "${{ env.PACKAGE_FILENAME }}"
#          content: |
#            {
#              "description": "TollGate Module Relay OpenWRT package for ${{ env.MODEL }}",
#              "module": "${{ env.MODULE_NAME }}",
#              "model": "${{ env.MODEL }}",
#              "version": "0.0.1"
#            }
#          nsec: ${{ secrets.NSEC }}
#          size: ${{ env.PACKAGE_SIZE }}
#          architecture: "${{ env.ARCH }}"
#
#      - name: Verify Package NIP-94 Event
#        id: verify_package
#        if: steps.publish_package.outputs.eventId != ''
#        uses: OpenTollGate/nostr-publish-file-metadata-action/python/verify@main
#        with:
#          eventId: ${{ steps.publish_package.outputs.eventId }}
#          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/
#
#      # - name: Check Package Publication
#      #   if: steps.verify_package.outcome != 'success'
#      #   run: |
#      #     echo "❌ Failed to verify package publication on relays"
#      #     exit 1
#
#      - name: Upload Package Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: package-${{ matrix.target.model }}
#          path: ${{ env.PACKAGE_FULLPATH }}
#          retention-days: 5
#
#      - name: Build Summary
#        run: |
#          echo "Build Summary for ${{ matrix.target.name }}:"
#          echo "✅ Binary successfully built and published"
#          echo "✅ Package successfully built and published"
#          echo "Binary URL: ${{ steps.upload_binary.outputs.blossomUrl }}"
#          echo "Package URL: ${{ steps.upload_package.outputs.blossomUrl }}"
#
#  install-os:
#    needs: build-package
#    runs-on: ubuntu-latest
#    steps:
#      - name: Trigger OS Workflow
#        uses: peter-evans/repository-dispatch@v2
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          repository: OpenTollGate/tollgate-os
#          event-type: update-release-json

